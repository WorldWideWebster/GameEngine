/**************Cleanup******************/

// TODO: move file loading to separate texture library/shader library

// TODO: Fix skybox class

// TODO: Move render loop to render class

// TODO: Make image viewer class

// TODO: Get some code cleanup tools

// TODO: Create objects to link shaders to - Object.addshader(shader?)

// TODO: Add unit primitive for each shape

// TODO: Move all Meshes to entities

// TODO: Move terrain meshes to entity

// TODO: MAKE UI 3D Render Window Class

// TODO: Replace all pointers with smart pointers

// TODO: Attach shaders to Entity? Entities to shader? Active shader(s) render?

// TODO: Renderbuffer should use OPENGL stuff

// TODO: Each mesh should have a name to return for entity use

// TODO: Clean up shader files

/****************Features**************/

// TODO: Add update to render loop

// TODO: Try generating any shape by random vertices?

// TODO: Ability to generate polygons - Polygon class that looks at angle to make sure it does not exceed 360

// TODO: Add model viewer

// TODO: Add ambient light

// TODO: Add console

// TODO: Selectable objects

// TODO: Sliders for Parameters

// TODO: Drag-Rotate mode

// TODO: Cardinal directions display

// TODO: Create shader viewer

// TODO: Clouds

// TODO: Rotatable scene via click/hold

// TODO: edit mesh in entity

// TODO: Add way to print screen to image file

// TODO: Select terrain generation method (file or code)

// TODO: Create scenehandler class where scenes can be looked at via UI and then have UI manipulate scene

// TODO: Add gamma correction https://learnopengl.com/Advanced-Lighting/Gamma-Correction

// TODO: Add omni-directional Shadows

// TODO: Add water

// TODO: Get center point of mesh/entity

// TODO: Add guide lines

// TODO: Terrain->select->add noise
/****************Architecture**************/
// TODO: Figure out where to put renderbuffer instances

// TODO: Use STD chrono

// TODO: Implement std::threads

// TODO: c++17 filesystem library

/****************Bugs**************/
// Captured mouse for perspective view should not move

/****************Research**************/

// TODO: L-systems

// TODO: Figure out how to have a single light effect multiple shaders

// TODO: Roads based on L-systems

// TODO: GGX vs Blinn-Phong

// TODO: OpenGL 3 to 4 (and the changes to how shaders work)

// TODO: GCC optimization (for smart pointer speed increase)


/******************DONE*********************/
// Fix Warnings                                                     - Done 08/02/2019
// Add Entity Class                                                 - Done 08/08/2019
// Fix SpotLight render function                                    - Done 08/29/2019
// Create class for each type of lighting                           - Done 08/29/2019
// Move all separate lighting to classes                            - Done 08/29/2019
// Print position of camera and direction (and maybe other things)  - Done 08/29/2019
// Move test window into the UITestWindow class                     - Done 10/07/2019
// Make UI Window class                                             - Done 10/07/2019
// Create test window                                               - Done 10/07/2019
// Move lighting to scene                                           - Done 10/08/2019
// Move lighting stuff to a separate file                           - Done 10/09/2019
// Move to C++14                                                    - Done 10/12/2019
// Add camera(s) to Scene                                           - Done 10/16/2019
// Fix stack overflow in Scene/Window/Camera                        - Done 10/17/2019
// Fix window and scene camera relationship                         - Done 10/17/2019
// Figure out position/direction update in scene                    - Done 10/17/2019
// Fix bug where positions are not updating                         - Done 10/21/2019
// Figure out flashlight with scene                                 - Done 10/21/2019
// Moved scene set up to setupTestScene function                    - Done 10/28/2019
// Create test scene                                                - Done 10/28/2019
// Moved Scene Entity and Light to smart pointers                   - Done 10/28/2019
// Added window to display Light/Entity properties                  - Done 11/03/2019
// Attach light to entity                                           - Done 11/03/2019
// Allow lights/entities to be edited from scene                    - Done 11/04/2019
// Attach light to entity  with offset function                     - Done 11/04/2019
// Move to C++17                                                    - Done 11/09/2019
// Added blinn-phong lighting                                       - Done 11/11/2019
// Fixed texture loading in shaders                                 - Done 11/20/2019
// Fixed loading custom textures onto meshes/entities               - Done 11/23/2019
// Moved Render Window to separate file                             - Done 11/27/2019
// Move UI windows in main to classes                               - Done 11/27/2019
// Fix crash caused by render buffer in render window               - Done 12/02/2019
// Fixed cube in scene 3 not rendering                              - Done 12/09/2019
// Fix transformations for entities                                 - Done 12/09/2019
// Fix Test scene 3                                                 - Done 12/10/2019
// Make UI Render Window Class                                              - Done 12/15/2019
// Fixed Setting a directional light's direction                            - Done 12/25/2019
// Fixed issue: when removing renderwindow, shadow map shows properly       - Done 01/15/2020
// ShadowDepth Buffer Class based on Shadow tutorial and FrameBuffer Class  - Done 01/15/2020
// Add Shadows                                                              - Done 01/21/2020
// figure out what to do with the view and projection matrices              - Done 01/22/2020
// Moved main window creation to class                                      - Done 01/23/2020
// Moved Data Window to separate class                                      - Done 01/27/2020

/******************NOT REQUIRED*********************/
// Add destructors to all classes                    -- Smart pointers have auto garbage collection

/******************IN PROGRESS*********************/
Clean up main function
clean up render loop